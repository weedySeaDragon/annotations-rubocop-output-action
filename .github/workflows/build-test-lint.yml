name: Build Test and Lint

on: push

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Node version version 14.17.6
        uses: actions/setup-node@v2.4.0
        with:
          node-version: '14.17.6'
          cache: 'yarn' # or npm

#      - uses: actions/setup-node@v1
#        with:
#          node-version: '12.x'
#      - name: Get yarn cache directory path
#        id: yarn-cache-dir-path
#        run: echo "::set-output name=dir::$(yarn cache dir)"
#      - uses: actions/cache@v2
#        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
#        with:
#          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-yarn-

      - run: yarn install
      - run: yarn run build
      - run: yarn run test

  prettier:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Node version version 14.17.6
        uses: actions/setup-node@v2.4.0
        with:
          node-version: '14.17.6'
          cache: 'yarn' # or npm

#      - uses: actions/setup-node@v1
#        with:
#          node-version: '12.x'
#      - name: Get yarn cache directory path
#        id: yarn-cache-dir-path
#        run: echo "::set-output name=dir::$(yarn cache dir)"
#      - uses: actions/cache@v2
#        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
#        with:
#          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-yarn-
#
      - run: yarn install
      - run: yarn run format-check


  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Node version version 14.17.6
        uses: actions/setup-node@v2.4.0
        with:
          node-version: '14.17.6'
          cache: 'yarn' # or npm

#      - uses: actions/setup-node@v1
#        with:
#          node-version: '12.x'
#      - name: Get yarn cache directory path
#        id: yarn-cache-dir-path
#        run: echo "::set-output name=dir::$(yarn cache dir)"
#      - uses: actions/cache@v2
#        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
#        with:
#          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-yarn-

      - run: yarn install
      - run: yarn run lint


  run-on-example-file:
    runs-on: ubuntu-latest

    name: Run action on example-rubocop.json file
    steps:
      # To use this repository's private action,
      # you must check out the repository
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create annotations from Rubocop offenses found in rubocop.json if there is a failure in the steps above
        # This will run action.yml in this repo
        uses: ./
        with:
          path: example-rubocop.json